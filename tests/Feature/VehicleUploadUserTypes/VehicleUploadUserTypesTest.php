<?php

namespace Tests\Feature\VehicleUploadUserTypes;

use App\Brand;
use App\Company;
use App\StockVehicle;
use App\User;
use Illuminate\Http\UploadedFile;
use Tests\TestCase;

class VehicleUploadUserTypesTest extends TestCase
{
    /**
     * @var User
     */
    public $user;

    /**
     * @var Company
     */
    public $company;

    /**
     * @var string
     */
    public $token;

    /**
     * When running tests comment out file validation rule in VehicleImportRequest
     */
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        StockVehicle::truncate();
    }

    /**
     * * @test
     */
    public function NCImportUserUpload()
    {
        $user = User::factory(['stock_type' => 'NC', 'import_types' => 'I'])
            ->has(Company::factory())
            ->create();

        $brand = Brand::firstOrCreate(['name' => 'BMW']);

        $user->brands()->attach($brand->id);

        $user->load('company');

        $user->assignRole('Uploader');

        $token = $user->api_token;

        $filePath = storage_path("test-lists") . "/unified_list_valid_nc_i.xlsx";

        $file = new \Symfony\Component\HttpFoundation\File\UploadedFile ($filePath, 'unified_list_valid_nc_i.xlsx', null, null, true);

        $finalFile = UploadedFile::createFromBase($file);

        $rawBody['file'] = $finalFile;

        $response = $this->actingAs($user)
            ->post("/api/v1/vehicle/import", $rawBody, [
                "Accept" => "application/json",
                "Content-Type" => "multipart/form-data",
                "Authorization" => "Bearer $token"
            ]);

        $response->assertStatus(201);

        $response->assertJsonFragment([
            'status' => 'success',
            'message' => 'Upload successful.',
        ]);

        $this->assertDatabaseHas('stock_vehicles', [
            'manufacturer_id' => 'WBA7K310407F25511'
        ]);

        $this->assertDatabaseHas('stock_vehicles', [
            'manufacturer_id' => 'WBA7K310307F19622'
        ]);

        $this->assertDatabaseHas('stock_vehicles', [
            'manufacturer_id' => 'WBS1J51080VA11733'
        ]);

        $this->assertDatabaseHas('stock_vehicles', [
            'manufacturer_id' => 'WBA6Y310307D40844'
        ]);

        $this->assertDatabaseHas('stock_vehicles', [
            'manufacturer_id' => 'WCS1J51080VA11733'
        ]);

        $this->assertDatabaseHas('stock_vehicles', [
            'manufacturer_id' => 'WDA6Y310307D40844'
        ]);

        $rawBody['file'] = $finalFile;

        $response = $this->actingAs($user)
            ->post("/api/v1/vehicle/import", $rawBody, [
                "Accept" => "application/json",
                "Content-Type" => "multipart/form-data",
                "Authorization" => "Bearer $token"
            ]);

        $response->assertStatus(201);

        $response->assertJsonFragment([
            'status' => 'success',
            'message' => 'Upload successful.',
        ]);

        $this->assertDatabaseCount('stock_vehicles', 6);
    }

    /**
     * * @test
     */
    public function NCImportUserUploadFullList()
    {
        $user = User::factory(['stock_type' => 'NC', 'import_types' => 'I'])
            ->has(Company::factory())
            ->create();

        $brand = Brand::firstOrCreate(['name' => 'BMW']);

        $user->brands()->attach($brand->id);

        $user->load('company');

        $user->assignRole('Uploader');

        $token = $user->api_token;

        $filePath = storage_path("test-lists") . "/unified_list_valid_nc.xlsx";

        $file = new \Symfony\Component\HttpFoundation\File\UploadedFile ($filePath, 'unified_list_valid_nc_i.xlsx', null, null, true);

        $finalFile = UploadedFile::createFromBase($file);

        $rawBody['file'] = $finalFile;

        $response = $this->actingAs($user)
            ->post("/api/v1/vehicle/import", $rawBody, [
                "Accept" => "application/json",
                "Content-Type" => "multipart/form-data",
                "Authorization" => "Bearer $token"
            ]);

        $response->assertStatus(201);

        $response->assertJsonFragment([
            'status' => 'success',
            'message' => 'Upload successful.',
        ]);

        $this->assertDatabaseHas('stock_vehicles', [
            'manufacturer_id' => 'WBA7K310407F25511'
        ]);

        $this->assertDatabaseHas('stock_vehicles', [
            'manufacturer_id' => 'WBA7K310307F19622'
        ]);

        $this->assertDatabaseHas('stock_vehicles', [
            'manufacturer_id' => 'WBS1J51080VA11733'
        ]);

        $this->assertDatabaseHas('stock_vehicles', [
            'manufacturer_id' => 'WBA6Y310307D40844'
        ]);

        $this->assertDatabaseHas('stock_vehicles', [
            'manufacturer_id' => 'WCS1J51080VA11733'
        ]);

        $this->assertDatabaseHas('stock_vehicles', [
            'manufacturer_id' => 'WDA6Y310307D40844'
        ]);

        $rawBody['file'] = $finalFile;

        $response = $this->actingAs($user)
            ->post("/api/v1/vehicle/import", $rawBody, [
                "Accept" => "application/json",
                "Content-Type" => "multipart/form-data",
                "Authorization" => "Bearer $token"
            ]);

        $response->assertStatus(201);

        $response->assertJsonFragment([
            'status' => 'success',
            'message' => 'Upload successful.',
        ]);

        $this->assertDatabaseCount('stock_vehicles', 6);
    }

    /**
     * * @test
     */
    public function nonNCImportWrongList()
    {
        $user = User::factory(['stock_type' => 'UC', 'import_types' => 'IR'])
            ->has(Company::factory())
            ->create();

        $brand = Brand::firstOrCreate(['name' => 'BMW']);

        $user->brands()->attach($brand->id);

        $user->load('company');

        $user->assignRole('Uploader');

        $token = $user->api_token;

        $filePath = storage_path("test-lists") . "/unified_list_valid_nc_i.xlsx";

        $file = new \Symfony\Component\HttpFoundation\File\UploadedFile ($filePath, 'unified_list_valid_nc_i.xlsx', null, null, true);

        $finalFile = UploadedFile::createFromBase($file);

        $rawBody['file'] = $finalFile;

        $response = $this->actingAs($user)
            ->post("/api/v1/vehicle/import", $rawBody, [
                "Accept" => "application/json",
                "Content-Type" => "multipart/form-data",
                "Authorization" => "Bearer $token"
            ]);

        $response->assertStatus(201);

        $responseData = $response->getOriginalContent();

        $validationErrors = $responseData['errors'];

        $validationErrorsArray = $this->parseValidationErrorArray($validationErrors);

        $response->assertJsonFragment([
            'status' => 'partial import',
            'message' => 'Upload partially successful. There were errors during the upload.',
        ]);

        $validationErrorsArrayCount = count($validationErrorsArray);

        $this->assertEquals(102, $validationErrorsArrayCount);
    }
}
